server:
  port: ${IEXEC_SMS_PORT:15443}
  http:
    enabled: ${IEXEC_SMS_HTTP_ENABLED:true}
    port: ${IEXEC_SMS_HTTP_PORT:15000}
  ssl:
    key-store: ${IEXEC_SMS_SSL_KEYSTORE:./src/main/resources/ssl-keystore-dev.p12}
    key-store-password: ${IEXEC_SMS_SSL_KEYSTORE_PASSWORD:whatever}
    key-store-type: ${IEXEC_SMS_SSL_KEYSTORE_TYPE:PKCS12}
    key-alias: ${IEXEC_SMS_SSL_KEYSTORE_ALIAS:iexec-core}
    client-auth: need

#logging.level:
  #com.iexec.sms.iexecsms.cas.CasClient: DEBUG
  #org.apache.http: DEBUG

# Not sure it's a good idea but here is a link for an embedded mongodb
# https://www.baeldung.com/spring-boot-embedded-mongodb
spring:
  data:
    mongodb:
      database: iexec-sms
      host: ${IEXEC_SMS_MONGO_HOST:localhost}
      port: ${IEXEC_SMS_MONGO_PORT:37017}

blockchain:
  id: ${IEXEC_CHAIN_ID:17}
  nodeAddress: ${IEXEC_SMS_BLOCKCHAIN_NODE_ADDRESS:http://localhost:8545}
  hubAddress: ${IEXEC_HUB_ADDRESS:0x60E25C038D70A15364DAc11A042DB1dD7A2cccBC}
  gasPriceMultiplier: ${IEXEC_GAS_PRICE_MULTIPLIER:1.0} # txs will be send with networkGasPrice*gasPriceMultiplier, 4.0 means super fast
  gasPriceCap: ${IEXEC_GAS_PRICE_CAP:22000000000} #in Wei, will be used for txs if networkGasPrice*gasPriceMultiplier > gasPriceCap

scone:
  cas:
    host: ${IEXEC_SCONE_CAS_HOST:localhost}
    port: ${IEXEC_SCONE_CAS_PORT:8081}

palaemon:
  configFile:
    withDataset: ${IEXEC_PALAEMON_CONFIG_FILE_WITH_DATASET:./src/main/resources/palaemonConfTemplateWithDataset.vm}
    withoutDataset: ${IEXEC_PALAEMON_CONFIG_FILE_WITHOUT_DATASET:./src/main/resources/palaemonConfTemplateWithoutDataset.vm}