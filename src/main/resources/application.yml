server:
  port: ${IEXEC_SMS_PORT:13300} # TODO document variable name modification for release

# Not sure it's a good idea but here is a link for an embedded mongodb
# https://www.baeldung.com/spring-boot-embedded-mongodb
#spring:
#  data:
#    mongodb:
#      database: iexec-sms
#      host: ${IEXEC_SMS_MONGO_HOST:localhost}
#      port: ${IEXEC_SMS_MONGO_PORT:37017}
      #ssl-enabled: true

# Embedded H2 inside JVM
spring:
  profiles:
    active: ${IEXEC_SMS_TEE_RUNTIME_FRAMEWORK:} # gramine/scone
  datasource:
    url: ${IEXEC_SMS_H2_URL:jdbc:h2:file:/data/sms-h2} # will get or create /data/sms-h2.mv.db
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
      database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: ${IEXEC_SMS_H2_CONSOLE:false} # http://localhost:13300/h2-console/
      settings.web-allow-others: ${IEXEC_SMS_H2_CONSOLE:false} # Get console if Docker run

encryption:
  # Will get previous key or else create one on this path
  # this file shouldn't be clearly readable outside the enclave (but encrypted content could be copied outside)
  aesKeyPath: ${IEXEC_SMS_STORAGE_ENCRYPTION_AES_KEY_PATH:/data/iexec-sms-aes.key}

blockchain:
  id: ${IEXEC_CHAIN_ID:17}
  node-address: ${IEXEC_SMS_BLOCKCHAIN_NODE_ADDRESS:http://localhost:8545}
  hub-address: ${IEXEC_HUB_ADDRESS:0xBF6B2B07e47326B7c8bfCb4A5460bef9f0Fd2002}
  gas-price-multiplier: ${IEXEC_GAS_PRICE_MULTIPLIER:1.0} # txs will be sent with networkGasPrice*gasPriceMultiplier, 4.0 means superfast
  gas-price-cap: ${IEXEC_GAS_PRICE_CAP:22000000000} #in Wei, will be used for txs if networkGasPrice*gasPriceMultiplier > gasPriceCap
  is-sidechain: ${IEXEC_IS_SIDECHAIN:false}

logging:
  tee.display-debug-session: ${IEXEC_SMS_DISPLAY_DEBUG_SESSION:false}
#  level:
#    org.springframework: DEBUG
#    org.apache.http: DEBUG

springdoc:
  packagesToScan: com.iexec.sms
  pathsToMatch: /**
