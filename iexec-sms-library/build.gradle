plugins {
    id 'java-library'
    id 'io.freefair.lombok'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'jacoco'
    id 'maven-publish'
}

dependencies {
    //implementation "com.iexec.commons:iexec-commons-poco:$iexecCommonsPocoVersion"
    //implementation "com.iexec.common:iexec-common:$iexecCommonVersion"
    implementation files('iexec-commons-poco/iexec-commons-poco-3.2.0-all.jar')
    implementation files('iexec-common/iexec-common-8.3.1-all.jar')
    testImplementation "org.assertj:assertj-core:3.22.0"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testImplementation 'org.mockito:mockito-junit-jupiter:4.7.0'
}

java {
    sourceCompatibility = "11"
    targetCompatibility = "11"
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    // classifier to produce 2 identified jar files
    archiveClassifier.set('all')
    // include source code in the jar
    from sourceSets.main.allSource
    // avoid duplicate application.properties import from jar and sources
    duplicatesStrategy = 'exclude'
}
build.dependsOn(shadowJar)

test {
    useJUnitPlatform()
}

// sonarqube code coverage requires jacoco XML report
jacocoTestReport {
    reports {
        xml.required = true
    }
}
tasks.test.finalizedBy    tasks.jacocoTestReport

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username nexusUser
                password nexusPassword
            }
            url = project.hasProperty("nexusUrl")? project.nexusUrl: ''
        }
    }
}
